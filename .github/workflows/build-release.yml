on:
  push: 
    tags:
      - release/**
jobs:
  build_release:
    runs-on: ubuntu-latest
    name: Build
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: linux
            arch: 386
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64
          - os: windows
            arch: amd64
          - os: windows
            arch: arm64
          - os: windows 
            arch: 386
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - run: mkdir out && cp -r templates out/templates
      - name: Build
        run: cd src && go build -o ../out . 
        env:
          GOARCH: ${{ matrix.arch }}
          GOOS: ${{ matrix.os }}
      - name: Create tar
        run: cd out && tar cvf ../donggu-${{ matrix.os }}-${{ matrix.arch }}.tar *
      - name: Upload artifact 
        uses: actions/upload-artifact@v3
        with:
          name: donggu-${{ matrix.os }}-${{ matrix.arch }}.tar
          path: donggu-${{ matrix.os }}-${{ matrix.arch }}.tar
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    name: Create release
    needs: build_release
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: action-artifacts
      - name: Merge artifacts
        run: mkdir artifacts; for folder in $(ls action-artifacts); do mv action-artifacts/$folder/* artifacts; done
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "artifacts/*"
